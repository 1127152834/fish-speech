defaults:
  - base
  - _self_

project: hubert_vq

# Lightning Trainer
trainer:
  accelerator: gpu
  devices: 4
  strategy: ddp_find_unused_parameters_true
  precision: 32
  max_steps: 1_000_000
  val_check_interval: 5000

sample_rate: 32000
hop_length: 640
num_mels: 128
n_fft: 2048
win_length: 2048

# Dataset Configuration
train_dataset:
  _target_: fish_speech.datasets.vqgan.VQGANDataset
  filelist: data/filelist.split.train
  sample_rate: ${sample_rate}
  hop_length: ${hop_length}
  slice_frames: 512

val_dataset:
  _target_: fish_speech.datasets.vqgan.VQGANDataset
  filelist: data/filelist.split.valid
  sample_rate: ${sample_rate}
  hop_length: ${hop_length}

data:
  _target_: fish_speech.datasets.vqgan.VQGANDataModule
  train_dataset: ${train_dataset}
  val_dataset: ${val_dataset}
  num_workers: 4
  batch_size: 32
  val_batch_size: 4

# Model Configuration
model:
  _target_: fish_speech.models.vqgan.VQGAN
  sample_rate: ${sample_rate}
  hop_length: ${hop_length}
  segment_size: 20480

  generator:
    _target_: fish_speech.models.vqgan.modules.models.SynthesizerTrn
    in_channels: 2048
    spec_channels: ${num_mels}
    segment_size: "${eval: '${model.segment_size} // ${hop_length}'}"
    inter_channels: 192
    hidden_channels: 192
    filter_channels: 768
    n_heads: 2
    n_layers: 6
    n_layers_q: 6
    n_layers_flow: 6
    n_layers_spk: 4
    n_flows: 4
    kernel_size: 3
    p_dropout: 0.1
    speaker_cond_layer: 2
    resblock: "1"
    resblock_kernel_sizes: [3, 7, 11]
    resblock_dilation_sizes: [[1, 3, 5], [1, 3, 5], [1, 3, 5]]
    upsample_rates: [10, 8, 2, 2, 2]
    upsample_initial_channel: 512
    upsample_kernel_sizes: [16, 16, 8, 2, 2]
    gin_channels: 512 # basically the speaker embedding size
    kmeans_ckpt: results/hubert-vq-pretrain/kmeans.pt
    codebook_size: 2048

  discriminator:
    _target_: fish_speech.models.vqgan.modules.discriminator.EnsembleDiscriminator

  mel_transform:
    _target_: fish_speech.models.vqgan.spectrogram.LogMelSpectrogram
    sample_rate: ${sample_rate}
    n_fft: ${n_fft}
    hop_length: ${hop_length}
    win_length: ${win_length}
    n_mels: ${num_mels}

  optimizer:
    _target_: torch.optim.AdamW
    _partial_: true
    lr: 2e-4
    betas: [0.8, 0.99]
    eps: 1e-5

  lr_scheduler:
    _target_: torch.optim.lr_scheduler.LambdaLR
    _partial_: true
    lr_lambda:
      _target_: fish_speech.scheduler.get_cosine_schedule_with_warmup_lr_lambda
      _partial_: true
      num_warmup_steps: 0
      num_training_steps: ${trainer.max_steps}
      final_lr_ratio: 0.05

callbacks:
  grad_norm_monitor:
    sub_module: generator

# Resume from rcell's checkpoint
ckpt_path: results/hubert-vq-pretrain/rcell/ckpt_23000_pl.pth
resume_weights_only: true
